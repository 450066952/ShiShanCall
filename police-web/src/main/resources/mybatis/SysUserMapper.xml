<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inch.mapper.SysUserMapper" > 

<!-- 用于登录检查 -->
<select id="queryLogin" resultType="SysUser"  parameterType="Object">
	select * from sys_user 
	where username=#{username} and password=#{password} and state=0  
</select>

<resultMap id="courseClassMap" type="SysUser">
      	<result property="guid" column="guid"/>
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="name" column="name"/>
        <collection property="cList" column="{nid=id}" javaType="ArrayList" select="getClassList" ></collection>
</resultMap>

<select id="getClassList" resultType="String" >
	 SELECT CONCAT(IFNULL(s2.name,''),s.name) name  from user_school us
	 INNER JOIN school s on us.classid=s.id
	 left JOIN school s2 on s.pid=s2.id
	 where uid=#{nid} and s.pid>0 and s2.pid>0
</select>

<!-- 查询系统用户列表 -->
<select id="queryByList" resultMap="courseClassMap" parameterType="Object">

    select s.username,s.name,s.id,s.guid,s.addtime,sch.name schoolname
	from sys_user s
	left join school sch on s.schoolid=sch.id
	where s.id>1

	<if test="username != null and username != ''" >
	     and s.username =#{username}
	</if>
	<if test="name != null and name != ''" >
	    and s.name like CONCAT('%',#{name},'%')
	</if>
	<if test="isadmin!=1">
		and s.schoolid=#{schoolid}
	</if>

	order by s.addtime desc
</select>

<!-- 删除记录 -->
<delete id="delete" parameterType="Object">
	delete 	 from sys_user where id = #{id}
</delete>
 
<!-- 根据id查询 系统用户 -->
<select id="queryById"  resultType="SysUser" parameterType="Object">
	select * from sys_user where id = #{id}
</select>

<!-- 根据id，修改记录-->  
<update id="update" parameterType="Object" >
  update sys_user set state=#{state},name=#{name},pic=#{pic},star=#{star},no=#{no},member=#{member},
  classids=#{schoolids},adduser=#{adduser},schoolid=#{schoolid},idcard=#{idcard} where id=#{id}
</update>

<!-- 新增用户-->  
<insert id="add" parameterType="Object"  useGeneratedKeys="true" keyProperty="id" >
  insert into sys_user (guid,username,password,name,state,addtime,adduser,classids,schoolid,pic,star,no,member,idcard)
  select UUID(),#{username},#{password},#{name},#{state},now(),#{adduser},#{schoolids},#{schoolid},#{pic},#{star},#{no},#{member},#{idcard}
  from sys_user where not exists (select username from sys_user where username=#{username}) limit 1
</insert>


<!-- 获取用户学校对应关系 -->
<select id="getUserSchoolRel" parameterType="Object" resultType="String">
	select classid  from user_school where uid = #{id}
</select>

<!-- 删除用户学校对应关系 -->
<delete id="deleteUserSchoolRel" parameterType="Object">
	delete  from user_school where uid = #{id}
</delete>

<!-- 批量插入用户对应的学校关系 -->
<insert id="insertUserSchoolBatch" parameterType="ArrayList">  
    insert into user_school (guid,uid,classid,addtime)  
    values  
    <foreach collection="list" item="obj" index="index" separator="," >  
       (UUID(),#{obj.id},#{obj.classid},now())  
    </foreach>  
</insert>

<!-- 获取所有父节点 -->
<select id="getAllParent" parameterType="Object" resultType="SchoolModel" >
	select * From school where isdel=0  and FIND_IN_SET(id, getParentList(#{id}))
</select>

	<select id="queryUserByDepart" resultType="map" parameterType="Object">
		select s.username,s.name from sys_user s
		where FIND_IN_SET(s.schoolid,#{departid})
	</select>
</mapper>   
